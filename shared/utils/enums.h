#pragma once
#include <string>
#include "utils/utils.h"

enum ScentTypes : byte
{
  PersonalPassiveScent,
  PersonalActiveScentA,
  PersonalActiveScentB,
  ColonyActiveScent,
  ColonyPassiveScent
};
enum InputVars
{
  CurrentFoodMagnitude = 0,
  ColonyFoodMagnitude,
  Age,
  InverseAge,
  MovingPersonalFoodTrend,
  LifetimePersonalFoodTrend,
  MovingColonyFoodTrend,
  LifetimeColonyFoodTrend,
  PersonalTimerA,
  PersonalTimerB,
  ColonyTimerA,
  ColonyTimerB,
  TileTypeO,
  TileTypePP,
  TileTypePN,
  TileTypeNP,
  TileTypeNN,
  TileHeightO,
  TileHeightPP,
  TileHeightPN,
  TileHeightNP,
  TileHeightNN,
  TileAntCountO,
  TileAntCountPP,
  TileAntCountPN,
  TileAntCountNP,
  TileAntCountNN,
  PersonalDecayingMemoryA,
  PersonalDecayingMemoryB,
  PersonalDecayingMemoryC,
  PersonalDecayingMemoryD,
  PersonalStaticMemoryA,
  PersonalStaticMemoryB,
  PersonalStaticMemoryC,
  PersonalStaticMemoryD,
  ColonyStaticMemoryA,
  ColonyStaticMemoryB,
  ColonyStaticMemoryC,
  ColonyStaticMemoryD,
  PersonalPassiveScentO,
  PersonalPassiveScentPP,
  PersonalPassiveScentPN,
  PersonalPassiveScentNP,
  PersonalPassiveScentNN,
  PersonalActiveScentAO,
  PersonalActiveScentAPP,
  PersonalActiveScentAPN,
  PersonalActiveScentANP,
  PersonalActiveScentANN,
  PersonalActiveScentBO,
  PersonalActiveScentBPP,
  PersonalActiveScentBPN,
  PersonalActiveScentBNP,
  PersonalActiveScentBNN,
  ColonyPassiveScentO,
  ColonyPassiveScentPP,
  ColonyPassiveScentPN,
  ColonyPassiveScentNP,
  ColonyPassiveScentNN,
  ColonyActiveScentCO,
  ColonyActiveScentCPP,
  ColonyActiveScentCPN,
  ColonyActiveScentCNP,
  ColonyActiveScentCNN,
  InputVarsSize
};

const std::string InputStrings[InputVars::InputVarsSize] =
    {
        "CurrentFoodMagnitude",
        "ColonyFoodMagnitude",
        "Age",
        "InverseAge",
        "MovingPersonalFoodTrend",
        "LifetimePersonalFoodTrend",
        "MovingColonyFoodTrend",
        "LifetimeColonyFoodTrend",
        "PersonalTimerA",
        "PersonalTimerB",
        "ColonyTimerA",
        "ColonyTimerB",
        "TileTypeO",
        "TileTypePP",
        "TileTypePN",
        "TileTypeNP",
        "TileTypeNN",
        "TileHeightO",
        "TileHeightPP",
        "TileHeightPN",
        "TileHeightNP",
        "TileHeightNN",
        "TileAntCountO",
        "TileAntCountPP",
        "TileAntCountPN",
        "TileAntCountNP",
        "TileAntCountNN",
        "PersonalDecayingMemoryA",
        "PersonalDecayingMemoryB",
        "PersonalDecayingMemoryC",
        "PersonalDecayingMemoryD",
        "PersonalStaticMemoryA",
        "PersonalStaticMemoryB",
        "PersonalStaticMemoryC",
        "PersonalStaticMemoryD",
        "ColonyStaticMemoryA",
        "ColonyStaticMemoryB",
        "ColonyStaticMemoryC",
        "ColonyStaticMemoryD",
        "PersonalPassiveScentO",
        "PersonalPassiveScentPP",
        "PersonalPassiveScentPN",
        "PersonalPassiveScentNP",
        "PersonalPassiveScentNN",
        "PersonalActiveScentAO",
        "PersonalActiveScentAPP",
        "PersonalActiveScentAPN",
        "PersonalActiveScentANP",
        "PersonalActiveScentANN",
        "PersonalActiveScentBO",
        "PersonalActiveScentBPP",
        "PersonalActiveScentBPN",
        "PersonalActiveScentBNP",
        "PersonalActiveScentBNN",
        "ColonyPassiveScentO",
        "ColonyPassiveScentPP",
        "ColonyPassiveScentPN",
        "ColonyPassiveScentNP",
        "ColonyPassiveScentNN",
        "ColonyActiveScentCO",
        "ColonyActiveScentCPP",
        "ColonyActiveScentCPN",
        "ColonyActiveScentCNP",
        "ColonyActiveScentCNN",
};

enum OutputActions
{
  NoOP = 0,
  MoveUP,
  MoveDOWN,
  MoveLEFT,
  MoveRIGHT,
  HarvestFood,
  GiveFood,
  TakeFood,
  WorkTile,
  CultivateTile,
  BuildRoad,
  RaiseHeight,
  LowerHeight,
  ProduceOffspring,
  ADecrementPDMA,
  BDecrementPDMA,
  AIncrementPDMA,
  BIncrementPDMA,
  ADecrementPDMB,
  BDecrementPDMB,
  AIncrementPDMB,
  BIncrementPDMB,
  ADecrementPDMC,
  BDecrementPDMC,
  AIncrementPDMC,
  BIncrementPDMC,
  ADecrementPDMD,
  BDecrementPDMD,
  AIncrementPDMD,
  BIncrementPDMD,
  ADecrementPSMA,
  BDecrementPSMA,
  AIncrementPSMA,
  BIncrementPSMA,
  ADecrementPSMB,
  BDecrementPSMB,
  AIncrementPSMB,
  BIncrementPSMB,
  ADecrementPSMC,
  BDecrementPSMC,
  AIncrementPSMC,
  BIncrementPSMC,
  ADecrementPSMD,
  BDecrementPSMD,
  AIncrementPSMD,
  BIncrementPSMD,
  IncrementCSMA,
  IncrementCSMB,
  IncrementCSMC,
  IncrementCSMD,
  DecrementCSMA,
  DecrementCSMB,
  DecrementCSMC,
  DecrementCSMD,
  ReleaseSmallScentA,
  ReleaseLargeScentA,
  ReleaseSmallScentB,
  ReleaseLargeScentB,
  ReleaseSmallScentC,
  ReleaseLargeScentC,
  ResetPersonalTimerA,
  ResetPersonalTimerB,
  ResetColonyTimerA,
  ResetColonyTimerB,
  FailedAction,
  OutputActionsSize
};

const std::string OutputStrings[OutputActions::OutputActionsSize] = {
    "NoOP",
    "MoveUP",
    "MoveDOWN",
    "MoveLEFT",
    "MoveRIGHT",
    "HarvestFood",
    "GiveFood",
    "TakeFood",
    "WorkTile",
    "CultivateTile",
    "BuildRoad",
    "RaiseHeight",
    "LowerHeight",
    "ProduceOffspring",
    "ADecrementPDMA",
    "BDecrementPDMA",
    "AIncrementPDMA",
    "BIncrementPDMA",
    "ADecrementPDMB",
    "BDecrementPDMB",
    "AIncrementPDMB",
    "BIncrementPDMB",
    "ADecrementPDMC",
    "BDecrementPDMC",
    "AIncrementPDMC",
    "BIncrementPDMC",
    "ADecrementPDMD",
    "BDecrementPDMD",
    "AIncrementPDMD",
    "BIncrementPDMD",
    "ADecrementPSMA",
    "BDecrementPSMA",
    "AIncrementPSMA",
    "BIncrementPSMA",
    "ADecrementPSMB",
    "BDecrementPSMB",
    "AIncrementPSMB",
    "BIncrementPSMB",
    "ADecrementPSMC",
    "BDecrementPSMC",
    "AIncrementPSMC",
    "BIncrementPSMC",
    "ADecrementPSMD",
    "BDecrementPSMD",
    "AIncrementPSMD",
    "BIncrementPSMD",
    "IncrementCSMA",
    "IncrementCSMB",
    "IncrementCSMC",
    "IncrementCSMD",
    "DecrementCSMA",
    "DecrementCSMB",
    "DecrementCSMC",
    "DecrementCSMD",
    "ReleaseSmallScentA",
    "ReleaseLargeScentA",
    "ReleaseSmallScentB",
    "ReleaseLargeScentB",
    "ReleaseSmallScentC",
    "ReleaseLargeScentC",
    "ResetPersonalTimerA",
    "ResetPersonalTimerB",
    "ResetColonyTimerA",
    "ResetColonyTimerB",
    "FailedAction"

};

enum AITypes
{

};